<connector version="3.3.1">
  <metaDataId>12</metaDataId>
  <name>Change HoH</name>
  <properties class="com.mirth.connect.connectors.http.HttpDispatcherProperties" version="3.3.1">
    <pluginProperties/>
    <destinationConnectorProperties version="3.3.1">
      <queueEnabled>false</queueEnabled>
      <sendFirst>false</sendFirst>
      <retryIntervalMillis>10000</retryIntervalMillis>
      <regenerateTemplate>false</regenerateTemplate>
      <retryCount>0</retryCount>
      <rotate>false</rotate>
      <includeFilterTransformer>false</includeFilterTransformer>
      <threadCount>1</threadCount>
      <threadAssignmentVariable></threadAssignmentVariable>
      <validateResponse>false</validateResponse>
      <resourceIds class="linked-hash-set">
        <string>Default Resource</string>
      </resourceIds>
    </destinationConnectorProperties>
    <host>${OPENHDS_PATH}/hoh</host>
    <useProxyServer>false</useProxyServer>
    <proxyAddress></proxyAddress>
    <proxyPort></proxyPort>
    <method>post</method>
    <headers class="linked-hash-map"/>
    <parameters class="linked-hash-map"/>
    <responseXmlBody>false</responseXmlBody>
    <responseParseMultipart>true</responseParseMultipart>
    <responseIncludeMetadata>false</responseIncludeMetadata>
    <responseBinaryMimeTypes></responseBinaryMimeTypes>
    <responseBinaryMimeTypesRegex>false</responseBinaryMimeTypesRegex>
    <multipart>false</multipart>
    <useAuthentication>true</useAuthentication>
    <authenticationType>Basic</authenticationType>
    <usePreemptiveAuthentication>true</usePreemptiveAuthentication>
    <username>${OPENHDS_USER}</username>
    <password>${OPENHDS_PASSWORD}</password>
    <content>${message.transformedData}</content>
    <contentType>application/xml</contentType>
    <dataTypeBinary>false</dataTypeBinary>
    <charset>UTF-8</charset>
    <socketTimeout>30000</socketTimeout>
  </properties>
  <transformer version="3.3.1">
    <steps>
      <step>
        <sequenceNumber>0</sequenceNumber>
        <name>Change HoH Transformer</name>
        <script>tmp[&apos;collectedBy&apos;][&apos;extId&apos;] = msg[&apos;openhds_field_worker_id&apos;].toString().toUpperCase();
tmp[&apos;visit&apos;][&apos;extId&apos;] = msg[&apos;openhds_visit_id&apos;].toString().toUpperCase();
tmp[&apos;newHoh&apos;][&apos;extId&apos;] = msg[&apos;openhds_new_hoh_id&apos;].toString().toUpperCase();
tmp[&apos;oldHoh&apos;][&apos;extId&apos;] = msg[&apos;openhds_individual_id&apos;].toString().toUpperCase();
tmp[&apos;socialGroup&apos;][&apos;extId&apos;] = msg[&apos;openhds_household_id&apos;].toString().toUpperCase();
tmp[&apos;date&apos;] = msg[&apos;date&apos;].toString().toUpperCase();

var relationsXml = new XML(&quot;&lt;memberships /&gt;&quot;);
var relations = msg[&apos;relation&apos;].length();
for(var i = 0; i &lt; relations; i++){
	relationsXml.appendChild(new XML(&quot;&lt;membership /&gt;&quot;));
	relationsXml[&apos;membership&apos;][i][&apos;bIsToA&apos;] = msg[&apos;relation&apos;][i][&apos;relationship_to_group_head&apos;].toString();
	relationsXml[&apos;membership&apos;][i][&apos;individual&apos;][&apos;extId&apos;] = msg[&apos;relation&apos;][i][&apos;ext_id&apos;].toString().toUpperCase();
	relationsXml[&apos;membership&apos;][i][&apos;socialGroup&apos;][&apos;extId&apos;] = msg[&apos;relation&apos;][i][&apos;social_group_id&apos;].toString().toUpperCase();
}

tmp[&apos;memberships&apos;] = relationsXml;</script>
        <type>JavaScript</type>
        <data>
          <entry>
            <string>Script</string>
            <string>tmp[&apos;collectedBy&apos;][&apos;extId&apos;] = msg[&apos;openhds_field_worker_id&apos;].toString().toUpperCase();
tmp[&apos;visit&apos;][&apos;extId&apos;] = msg[&apos;openhds_visit_id&apos;].toString().toUpperCase();
tmp[&apos;newHoh&apos;][&apos;extId&apos;] = msg[&apos;openhds_new_hoh_id&apos;].toString().toUpperCase();
tmp[&apos;oldHoh&apos;][&apos;extId&apos;] = msg[&apos;openhds_individual_id&apos;].toString().toUpperCase();
tmp[&apos;socialGroup&apos;][&apos;extId&apos;] = msg[&apos;openhds_household_id&apos;].toString().toUpperCase();
tmp[&apos;date&apos;] = msg[&apos;date&apos;].toString().toUpperCase();

var relationsXml = new XML(&quot;&lt;memberships /&gt;&quot;);
var relations = msg[&apos;relation&apos;].length();
for(var i = 0; i &lt; relations; i++){
	relationsXml.appendChild(new XML(&quot;&lt;membership /&gt;&quot;));
	relationsXml[&apos;membership&apos;][i][&apos;bIsToA&apos;] = msg[&apos;relation&apos;][i][&apos;relationship_to_group_head&apos;].toString();
	relationsXml[&apos;membership&apos;][i][&apos;individual&apos;][&apos;extId&apos;] = msg[&apos;relation&apos;][i][&apos;ext_id&apos;].toString().toUpperCase();
	relationsXml[&apos;membership&apos;][i][&apos;socialGroup&apos;][&apos;extId&apos;] = msg[&apos;relation&apos;][i][&apos;social_group_id&apos;].toString().toUpperCase();
}

tmp[&apos;memberships&apos;] = relationsXml;</string>
          </entry>
        </data>
      </step>
    </steps>
    <inboundTemplate encoding="base64">PGNoYW5nZUhvSD4NCiAgICA8X3VyaT48L191cmk+DQogICAgPG9wZW5oZHNfdmlzaXRfaWQ+PC9v
cGVuaGRzX3Zpc2l0X2lkPg0KICAgIDxvcGVuaGRzX2ZpZWxkX3dvcmtlcl9pZD48L29wZW5oZHNf
ZmllbGRfd29ya2VyX2lkPg0KICAgIDxvcGVuaGRzX25ld19ob2hfaWQ+PC9vcGVuaGRzX25ld19o
b2hfaWQ+DQogICAgPG9wZW5oZHNfaW5kaXZpZHVhbF9pZD48L29wZW5oZHNfaW5kaXZpZHVhbF9p
ZD4NCgk8b3Blbmhkc19ob3VzZWhvbGRfaWQ+PC9vcGVuaGRzX2hvdXNlaG9sZF9pZD4KCTxkYXRl
PjwvZGF0ZT4KICAgIDxyZWxhdGlvbj4NCiAgICAgICAgPG1lbWJlcl9uYW1lPjwvbWVtYmVyX25h
bWU+DQogICAgICAgIDxyZWxhdGlvbnNoaXBfdG9fZ3JvdXBfaGVhZD48L3JlbGF0aW9uc2hpcF90
b19ncm91cF9oZWFkPg0KICAgICAgICA8ZXh0X2lkPjwvZXh0X2lkPg0KICAgICAgICA8c29jaWFs
X2dyb3VwX2lkPjwvc29jaWFsX2dyb3VwX2lkPg0KICAgIDwvcmVsYXRpb24+DQo8L2NoYW5nZUhv
SD4=</inboundTemplate>
    <outboundTemplate encoding="base64">PGRlYXRoX29mX2hoPg0KICAgIDxjb2xsZWN0ZWRCeT4KCQk8ZXh0SWQ+PC9leHRJZD4KCTwvY29s
bGVjdGVkQnk+CiAgICA8dmlzaXQ+CgkJPGV4dElkPjwvZXh0SWQ+Cgk8L3Zpc2l0Pg0KICAgIDxu
ZXdIb2g+CgkJPGV4dElkPjwvZXh0SWQ+Cgk8L25ld0hvaD4NCiAgICA8b2xkSG9oPgoJCTxleHRJ
ZD48L2V4dElkPgoJPC9vbGRIb2g+DQoJPHNvY2lhbEdyb3VwPgoJCTxleHRJZD48L2V4dElkPgoJ
PC9zb2NpYWxHcm91cD4JCgk8ZGF0ZT48L2RhdGU+Cgk8bWVtYmVyc2hpcHM+CiAgICAJPG1lbWJl
cnNoaXA+DQoJICAgICAgICA8YklzVG9BPjwvYklzVG9BPg0KICAgIAkgICAgPGluZGl2aWR1YWw+
CgkJCQk8ZXh0SWQ+PC9leHRJZD4KCQkJPC9pbmRpdmlkdWFsPgogICAgICAgIAk8c29jaWFsR3Jv
dXA+CgkJCQk8ZXh0SWQ+PC9leHRJZD4KCQkJPC9zb2NpYWxHcm91cD4NCgkgICAgPC9tZW1iZXJz
aGlwPg0KCTwvbWVtYmVyc2hpcHM+CjwvZGVhdGhfb2ZfaGg+</outboundTemplate>
    <inboundDataType>XML</inboundDataType>
    <outboundDataType>XML</outboundDataType>
    <inboundProperties class="com.mirth.connect.plugins.datatypes.xml.XMLDataTypeProperties" version="3.3.1">
      <serializationProperties class="com.mirth.connect.plugins.datatypes.xml.XMLSerializationProperties" version="3.3.1">
        <stripNamespaces>true</stripNamespaces>
      </serializationProperties>
      <batchProperties class="com.mirth.connect.plugins.datatypes.xml.XMLBatchProperties" version="3.3.1">
        <splitType>Element_Name</splitType>
        <elementName></elementName>
        <level>1</level>
        <query></query>
        <batchScript></batchScript>
      </batchProperties>
    </inboundProperties>
    <outboundProperties class="com.mirth.connect.plugins.datatypes.xml.XMLDataTypeProperties" version="3.3.1">
      <serializationProperties class="com.mirth.connect.plugins.datatypes.xml.XMLSerializationProperties" version="3.3.1">
        <stripNamespaces>true</stripNamespaces>
      </serializationProperties>
      <batchProperties class="com.mirth.connect.plugins.datatypes.xml.XMLBatchProperties" version="3.3.1">
        <splitType>Element_Name</splitType>
        <elementName></elementName>
        <level>1</level>
        <query></query>
        <batchScript></batchScript>
      </batchProperties>
    </outboundProperties>
  </transformer>
  <responseTransformer version="3.3.1">
    <steps/>
    <inboundDataType>XML</inboundDataType>
    <outboundDataType>XML</outboundDataType>
    <inboundProperties class="com.mirth.connect.plugins.datatypes.xml.XMLDataTypeProperties" version="3.3.1">
      <serializationProperties class="com.mirth.connect.plugins.datatypes.xml.XMLSerializationProperties" version="3.3.1">
        <stripNamespaces>true</stripNamespaces>
      </serializationProperties>
      <batchProperties class="com.mirth.connect.plugins.datatypes.xml.XMLBatchProperties" version="3.3.1">
        <splitType>Element_Name</splitType>
        <elementName></elementName>
        <level>1</level>
        <query></query>
        <batchScript></batchScript>
      </batchProperties>
    </inboundProperties>
    <outboundProperties class="com.mirth.connect.plugins.datatypes.xml.XMLDataTypeProperties" version="3.3.1">
      <serializationProperties class="com.mirth.connect.plugins.datatypes.xml.XMLSerializationProperties" version="3.3.1">
        <stripNamespaces>true</stripNamespaces>
      </serializationProperties>
      <batchProperties class="com.mirth.connect.plugins.datatypes.xml.XMLBatchProperties" version="3.3.1">
        <splitType>Element_Name</splitType>
        <elementName></elementName>
        <level>1</level>
        <query></query>
        <batchScript></batchScript>
      </batchProperties>
    </outboundProperties>
  </responseTransformer>
  <filter version="3.3.1">
    <rules>
      <rule>
        <sequenceNumber>0</sequenceNumber>
        <name>New Rule</name>
        <data>
          <entry>
            <string>Script</string>
            <string>return msg[&quot;@event&quot;].toString() === &quot;change-hoh&quot;;</string>
          </entry>
        </data>
        <type>JavaScript</type>
        <script>return msg[&quot;@event&quot;].toString() === &quot;change-hoh&quot;;</script>
        <operator>NONE</operator>
      </rule>
    </rules>
  </filter>
  <transportName>HTTP Sender</transportName>
  <mode>DESTINATION</mode>
  <enabled>true</enabled>
  <waitForPrevious>true</waitForPrevious>
</connector>